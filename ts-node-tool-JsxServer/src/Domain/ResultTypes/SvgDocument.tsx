import {renderToStaticMarkup} from "react-dom/server";
import {name as packageName} from "../../../package.json";
import {TypedResponseBody} from "../TypedResponseBody";
import {FileTransform} from "../Transforms/FileTransform";
import {ReactElement} from "react";

export type SvgDocument = TypedResponseBody<"image/svg+xml">;

/** Renders the JSX to static markup, and prepends the doctype. */
export function SvgDocument(element: ReactElement): SvgDocument {
    const comment = `<!-- Generated by ${packageName} -->`;
    const markup = renderToStaticMarkup(element);
    
    // From what I could find, 
    // SVG doesn't want or need neither a <!DOCTYPE/> nor a <?xml/> statement
    return { 
        type: "image/svg+xml", 
        value: `${comment}\n${markup}`,
    };
}

export const renderSvgError_async = (async (
    {name, stack}: Error,
): Promise<SvgDocument> => {
    const width = 1024;
    const height = 512;
    
    return SvgDocument(<svg
        version="1.1"
        xmlns="http://www.w3.org/2000/svg"
        width={width}
        height={height}
    >
        <title>{name}</title>
        <foreignObject 
            x={0} 
            y={0} 
            width={width} 
            height={height}
        >
            <div 
                style={{
                color: "red",
                whiteSpace: "pre-wrap",
                }} 
                {...{
                // JSX thinks this is HTML, not XML
                xmlns: "http://www.w3.org/1999/xhtml",
                }
            }>
                {stack}
            </div>
        </foreignObject>
    </svg>);
}) satisfies FileTransform["renderError_async"];
