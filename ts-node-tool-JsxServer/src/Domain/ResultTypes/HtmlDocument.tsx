import {CSSProperties, ReactElement} from "react";
import {renderToStaticMarkup} from "react-dom/server";
import {name as packageName} from "../../../package.json";
import {TypedResponse} from "../MimeType";
import {FileTransform} from "../Transforms/FileTransform";

export type HtmlDocument = TypedResponse<"text/html">;

/** Renders the JSX to static markup, and prepends the doctype. */
export function HtmlDocument(element: ReactElement): HtmlDocument {
    const comment = `<!-- Generated by ${packageName} -->`;
    const markup = renderToStaticMarkup(element);
    // TODO: Insert a check for [meta]description, [meta]viewport, etc.
    // Is there a way to do that without regex?
    // Or parsing the result document.
    
    return { 
        type: "text/html", 
        body: `<!DOCTYPE html>\n${comment}\n${markup}`,
    };
}

export const MetaViewport = () => <>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
</>;

export const renderHtmlError_async = (async (error: Error): Promise<HtmlDocument> => {
    const { name, stack } = error;
    const style = {
        color: "red",
        whiteSpace: "pre-wrap",
    } satisfies CSSProperties;
    
    return HtmlDocument(<html>
        <head>
            <title>{`${name}`}</title>
            <MetaViewport/>
        </head>
        <body>
            <div style={style}>{stack}</div>
        </body>
    </html>);
}) satisfies FileTransform["renderError_async"];
