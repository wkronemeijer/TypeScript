import { ReactElement, ReactNode } from "react";
import { renderToStaticMarkup } from "react-dom/server";
import { MimeTypedString } from "../MimeType";
import { FileTransform } from "../Transforms/FileTransform";

import { name as packageName } from "../../../package.json";

export type HtmlDocument = MimeTypedString<"text/html">;

/** Renders the JSX to static markup, and prepends the doctype. */
export function HtmlDocument(element: ReactElement): HtmlDocument {
    const comment = `<!-- Generated by ${packageName} -->`;
    const markup = renderToStaticMarkup(element);
    // TODO: Insert a check for [meta]description, [meta]viewport, etc.
    // Is there a way to do that without regex?
    // Or parsing the result document.
    
    return { 
        type: "text/html", 
        body: `<!DOCTYPE html>\n${comment}\n${markup}`,
    };
}

/** Wraps the whole thing in html, head, body, title, standard mobile meta viewport. */
export function SimpleHtmlDocument(title: string, bodyContent: ReactNode): HtmlDocument {
    return HtmlDocument(<html>
        <head>
            <title>{`${title}`}</title>
            <meta name="viewport" content="width=device-width, initial-scale=1"/>
        </head>
        <body>
            {bodyContent}
        </body>
    </html>);
}

export const renderHtmlError_async = (async (error: Error): Promise<HtmlDocument> => {
    const { name, stack } = error;
    return SimpleHtmlDocument(name, <>
        <div style={{
            color: "red",
            whiteSpace: "pre-wrap",
        }}>
            {stack}
        </div>
    </>);
}) satisfies FileTransform["renderError_async"];
